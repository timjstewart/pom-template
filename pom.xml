<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.timjstewart</groupId>
  <artifactId>maven-fun</artifactId>
  <version>1.0</version>

  <dependencies>

    <!-- 
    Test Dependencies
    -->
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <!-- 
    Utility Dependencies (Logging, Dependency Injection, Precondistions, Caches, etc.)
    -->

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.1</version>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>3.0</version>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>15.0</version>
    </dependency>

  </dependencies>

  <build>

    <!--
    Some plugins that are useful to a variety of projects.
    -->

    <plugins>

      <!-- 
      Runs a particular main method.

      See: http://mojo.codehaus.org/exec-maven-plugin/usage.html

      exec:java - runs application in the same JVM as Maven
      exec:exec - spawns a new process

      Run with arguments with: mvn exec:java -Dexec.args="foo bar baz"
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <mainClass>com.timjstewart.Main</mainClass>
	</configuration>
      </plugin>

       <!-- 
       Creates Javadoc documentation 

       See: http://maven.apache.org/plugins/maven-javadoc-plugin/usage.html

       mvn javadoc:javadoc - creates target/site/apidocs/index.html
       mvn javadoc:fix - adds javadoc comments to source files in place

       I tried putting this plugin in the reporting section but it did
       not automatically generate my JavaDoc site when I ran mvn site.
       -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-javadoc-plugin</artifactId>
         <version>2.9.1</version>
	 <executions>
           <execution>
             <id>attach-javadocs</id>
             <phase>site</phase>
             <goals>
               <goal>aggregate</goal>
             </goals>
           </execution>
	 </executions>
       </plugin>

      <!-- 
      Finds bugs in your source code

      findbugs:check
      findbugs:findbugs
      findbugs:gui

      See: http://mojo.codehaus.org/findbugs-maven-plugin/usage.html

      Note: Java source code must be compiled.  I guess it does
      byte-code analysis as opposed to source code analysis.
      -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.5.2</version>
      </plugin>

       <!--
       Code Coverage Tool

       cobertura:cobertura - generates report at target/site/cobertura/index.html

       See: http://mojo.codehaus.org/cobertura-maven-plugin/usage.html
       -->
       <plugin>
         <groupId>org.codehaus.mojo</groupId>
         <artifactId>cobertura-maven-plugin</artifactId>
         <version>2.6</version>
       </plugin>

       <!-- 
       Generates a dependency report

       mvn jdepend:generate - creates target/jdepend-report.xml

       mvn site:site - creates target/site/jdepend-report.html

       See: http://mojo.codehaus.org/jdepend-maven-plugin/usage.html
       -->
       <plugin>
         <groupId>org.codehaus.mojo</groupId>
         <artifactId>jdepend-maven-plugin</artifactId>
         <version>2.0-beta-2</version>
       </plugin>

       <!--
       Scans source code for various tags

       taglist:taglist

       See: http://mojo.codehaus.org/taglist-maven-plugin/usage.html
       -->
       <plugin>
         <groupId>org.codehaus.mojo</groupId>
         <artifactId>taglist-maven-plugin</artifactId>
         <version>2.4</version>
	 <configuration>
           <encoding>UTF-8</encoding>
           <sourceFileLocale>en</sourceFileLocale>
           <emptyComments>false</emptyComments>

           <tagListOptions>
             <tagClasses>
               <tagClass>
                 <displayName>Code Work</displayName>
                 <tags>
                   <tag>
                     <matchString>FIXME</matchString>
                     <matchType>exact</matchType>
                   </tag>
                   <tag>
                     <matchString>TODO</matchString>
                     <matchType>ignoreCase</matchType>
                   </tag>
                 </tags>
               </tagClass>
             </tagClasses>
           </tagListOptions>
         </configuration>
	 
       </plugin>

       <!--
       Create eclipse project

       mvn eclipse:eclipse

       See: http://maven.apache.org/plugins/maven-eclipse-plugin/plugin-info.html
       -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-eclipse-plugin</artifactId>
         <version>2.9</version>
       </plugin>

       <!-- 
       Creates a jar file with the source code in it

       mvn source:jar

       See: http://maven.apache.org/plugins/maven-source-plugin/usage.html
       -->
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-source-plugin</artifactId>
         <version>2.2.1</version>
	 <executions>
           <execution>
             <id>attach-sources</id>
             <phase>verify</phase>
             <goals>
               <goal>jar-no-fork</goal>
             </goals>
           </execution>
         </executions>
       </plugin>
    </plugins>
  </build>

</project>
